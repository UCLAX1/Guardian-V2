{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MoveButton from './MoveButton.js';\nimport DownloadButton from './DownloadButton.js';\nimport GradientButton from './GradientButton.js';\nimport OnOffButton from './OnOffButton.js';\nimport DistanceAngle from './DistanceAngle.js';\nimport Header from './Header.js';\nimport LinkTable from './Table.js';\nimport Spinner from './Spinner.js'; //comment out hamburger and project\n//pulling from local csv and render the table data automatically\n//pure: sliding window, one at a time\n//shift everything to the left\n//combine network's work\n\n/*flow chart of eventhandlers:\n1.dashboard has a state of controls= true\n2. have a OnOffButton.js, and we use it in this main\n3. declare a onToggleSwitch function that setState when the onOffButton is pressed (and hence calls the render function)\n4. pass the onToggleSwitch as a prop to the onOffButton\n5. In onOffButton, create an event handler function for when the button is pressed. Inside that func, call the func that was\npassed from the parent with the param of the latest controls state\n6.the onToggleSwitch finally setStates and renders\n7.Also need to make sure the func render calls has conditionals in it\n\n*/\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: false,\n      video: false,\n      frame_counter: 0\n    };\n\n    this.onToggleSwitch = controls => {\n      //console.log(\"onToggleSwitch is called\");\n      //console.log(\"value of controls is\");\n      //console.log(controls);\n      this.setState({\n        controls: controls\n      });\n    };\n\n    this.onDataInput = new_count => {\n      this.setState({\n        row_counter: this.row_counter + new_count\n      });\n    };\n\n    this.renderOnOffButton = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '220px',\n          left: '1270px'\n        },\n        className: \"OnOffButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(OnOffButton, {\n        onClick: this.onToggleSwitch,\n        value: \"hello\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 10\n        }\n      }));\n    };\n\n    this.renderControls = () => {\n      if (!this.state.controls) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"controls\",\n          style: {\n            position: 'absolute',\n            top: '330px',\n            left: '1220px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DistanceAngle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '540px',\n            left: '1350px'\n          },\n          className: \"execute_move\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(GradientButton, {\n          text: \"EXECUTE\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }\n        })));\n      } //console.log(\"I'm called! And bool value in function:\")\n      //console.log(this.state.controls);\n      //return <div> no controls</div>;\n\n    };\n\n    this.renderVideo = () => {\n      if (this.state.controls) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }\n        }, this.renderImage());\n        /*\n        return(\n          <video style = {{position:'absolute', top:150, left:50, maxWidth:960,height:720}} controls >\n            Your brower does not support this video format.\n          </video>\n        );\n        */\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 150,\n          left: 50,\n          width: 960,\n          height: 720\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }));\n    };\n\n    this.test_data = ['1662,60,53,57,51,7,46,2020-04-27 15:36:14.529748', '1661,41,62,98,35,81,24,2020-04-27 15:36:14.526756', '1660,99,72,50,40,58,76,2020-04-27 15:36:14.524763', '1659,70,30,74,20,49,34,2020-04-27 15:36:14.521769', '1658,5,94,6,21,19,73,2020-04-27 15:36:14.519775', '1662,60,53,57,51,7,46,2020-04-28 15:36:14.529748', '1661,41,62,98,35,81,24,2020-04-29 15:36:14.526756', '1660,99,72,50,40,58,76,2020-04-30 15:36:14.524763', '1659,70,30,74,20,49,34,2020-05-01 15:36:14.521769', '1658,5,94,6,21,19,73,2020-05-02 15:36:14.519775'];\n    this.size = this.test_data.length;\n\n    this.fetch_new_frame = () => {\n      if (this.state.frame_counter < size) {\n        this.setState({\n          frame_counter: this.state.frame_counter + 1\n        });\n        return test_data[counter];\n      } else {\n        return false;\n      }\n    };\n  }\n\n  render() {\n    //fetch_new_frame();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.renderContent(), \";\");\n  }\n\n  renderContent() {\n    //{this.renderVideo()}\n    //{this.renderImage()}\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), this.renderTable_Download(), this.renderVideo(), this.renderOnOffButton(), this.renderControls());\n  }\n\n  renderTable_Download() {\n    if (this.state.controls) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"History\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '790px',\n          left: '1350px'\n        },\n        className: \"Download\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DownloadButton, {\n        filename: \"log.csv\",\n        text: \"DOWNLOAD\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '320px',\n          left: '1060px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LinkTable, {\n        row_data: this.test_data[this.state.frame_counter],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n  renderImage() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 150,\n        left: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        borderRadius: 5\n      },\n      src: require('./data/test_pic.jpg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/*\nrenderControls = ()=>{\n  if (this.state.controls){\n    //console.log(\"renderControls called! And bool value in function:\")\n    //console.log(this.state.controls);\n    return(\n      <div className = \"controls\">\n        <div style = {{  position: 'absolute', top: '580px', left: '1000px'}} className = 'ThreeMoveButtons'>\n          <MoveButton text = \"Left\"  />\n          <MoveButton  text = \"Down\"/>\n          <MoveButton  text = \"Right\"  />\n        </div>\n         <div style= {{  position: 'absolute', top: '480px', left: '1100px'}} className = 'Top'>\n          <MoveButton  text = \"Top\"  />\n        </div>\n      </div>\n     );\n  }\n  //console.log(\"I'm called! And bool value in function:\")\n  //console.log(this.state.controls);\n  //return <div> no controls</div>;\n  }\nrenderCoord(){\n  return(\n    <div className=\"coordinates\">\n      <p style = {{position:'absolute',top:700, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LINK X: 452 </p>\n      <p style = {{position:'absolute',top:700, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LINK Y: 568 </p>\n      <p style = {{position:'absolute',top:730, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LASER X: 128 </p>\n      <p style = {{position:'absolute',top:730, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LASER Y: 345 </p>\n    </div>\n  );\n}\n renderDownload(){\n  if (this.state.controls){\n      return (\n      <div style= {{  position: 'absolute', top: '700px', left: '1360px'}} className = 'Download'>\n        <GradeintButton  text = \"DOWNLOAD LOG\"  />\n      </div>\n    );\n  }\n}\n*/\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Dashboard, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 7\n  }\n}), document.getElementById('root'));\nvar fetch_success = fetch_new_frame();\n\nwhile (fetch_success != false) {\n  fetch_success = fetch_new_frame();\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/index.js"],"names":["React","ReactDOM","MoveButton","DownloadButton","GradientButton","OnOffButton","DistanceAngle","Header","LinkTable","Spinner","Dashboard","Component","state","controls","video","frame_counter","onToggleSwitch","setState","onDataInput","new_count","row_counter","renderOnOffButton","position","top","left","renderControls","renderVideo","renderImage","width","height","test_data","size","length","fetch_new_frame","counter","render","renderContent","renderTable_Download","borderRadius","require","document","getElementById","fetch_success"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport MoveButton from './MoveButton.js';\nimport DownloadButton from './DownloadButton.js';\nimport GradientButton from './GradientButton.js'\nimport OnOffButton from './OnOffButton.js';\nimport DistanceAngle from './DistanceAngle.js'\nimport Header from './Header.js'\nimport LinkTable from'./Table.js'\nimport Spinner from './Spinner.js'\n//comment out hamburger and project\n//pulling from local csv and render the table data automatically\n//pure: sliding window, one at a time\n//shift everything to the left\n//combine network's work\n\n\n\n\n/*flow chart of eventhandlers:\n1.dashboard has a state of controls= true\n2. have a OnOffButton.js, and we use it in this main\n3. declare a onToggleSwitch function that setState when the onOffButton is pressed (and hence calls the render function)\n4. pass the onToggleSwitch as a prop to the onOffButton\n5. In onOffButton, create an event handler function for when the button is pressed. Inside that func, call the func that was\npassed from the parent with the param of the latest controls state\n6.the onToggleSwitch finally setStates and renders\n7.Also need to make sure the func render calls has conditionals in it\n\n*/\n\n\n\n\nclass Dashboard extends React.Component {\n  state = {controls:false, video:false, frame_counter:0};\n\n  render(){\n    //fetch_new_frame();\n    return(\n      <div className = \"dashboard\">\n        {this.renderContent()};\n      </div>\n    );\n\n  }\n\n  renderContent(){\n    //{this.renderVideo()}\n    //{this.renderImage()}\n\n    return (\n      <div>\n        <Header/>\n        {this.renderTable_Download()}\n        {this.renderVideo()}\n        {this.renderOnOffButton()}\n        {this.renderControls()}\n      </div>\n    );\n\n  }\n\n\n  onToggleSwitch = (controls) =>{\n    //console.log(\"onToggleSwitch is called\");\n    //console.log(\"value of controls is\");\n    //console.log(controls);\n\n    this.setState({controls:controls});\n\n  }\n\n  onDataInput = (new_count) =>{\n    this.setState({row_counter: this.row_counter+ new_count});\n\n  }\n  renderOnOffButton = () =>{\n      return(\n        <div style = {{  position: 'absolute', top: '220px', left: '1270px'}} className = 'OnOffButton'>\n         <OnOffButton onClick = {this.onToggleSwitch}  value = \"hello\"/>\n        </div>\n\n      );\n\n  }\n  renderTable_Download(){\n\n    if (this.state.controls){\n        return (\n        <div className = 'History'>\n          <div style= {{  position: 'absolute', top: '790px', left: '1350px'}} className = 'Download'>\n            <DownloadButton\n              filename = 'log.csv'\n              text = 'DOWNLOAD'\n            />\n          </div>\n\n          <div style ={{  position: 'absolute', top: '320px', left: '1060px'}}>\n            <LinkTable row_data = {this.test_data[this.state.frame_counter]}/>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n  renderControls = ()=>{\n    if (!this.state.controls){\n      return(\n        <div>\n          <div className = \"controls\" style = {{  position: 'absolute', top: '330px', left: '1220px'}}>\n            <DistanceAngle/>\n          </div>\n\n          <div style= {{  position: 'absolute', top: '540px', left: '1350px'}} className = 'execute_move'>\n            <GradientButton  text = \"EXECUTE\"  />\n          </div>\n        </div>\n\n      );\n    }\n    //console.log(\"I'm called! And bool value in function:\")\n    //console.log(this.state.controls);\n    //return <div> no controls</div>;\n  }\n\n\n\n\n\n  renderVideo = () => {\n    if (this.state.controls){\n      return (\n        <div>\n          {this.renderImage()}\n        </div>\n      );\n      /*\n      return(\n        <video style = {{position:'absolute', top:150, left:50, maxWidth:960,height:720}} controls >\n          Your brower does not support this video format.\n        </video>\n      );\n      */\n    }\n    return (\n        <div style = {{position:'absolute', top:150, left:50, width: 960, height:720 }}>\n          <Spinner/>\n        </div>\n\n    );\n  }\n\n  renderImage(){\n    return (\n      <div style = {{position:'absolute', top:150, left:50}}>\n        <img style = {{borderRadius:5}} src={require('./data/test_pic.jpg')} />\n      </div>\n    );\n\n  }\n\n  test_data=\n  [\n    '1662,60,53,57,51,7,46,2020-04-27 15:36:14.529748',\n    '1661,41,62,98,35,81,24,2020-04-27 15:36:14.526756',\n    '1660,99,72,50,40,58,76,2020-04-27 15:36:14.524763',\n    '1659,70,30,74,20,49,34,2020-04-27 15:36:14.521769',\n    '1658,5,94,6,21,19,73,2020-04-27 15:36:14.519775',\n    '1662,60,53,57,51,7,46,2020-04-28 15:36:14.529748',\n    '1661,41,62,98,35,81,24,2020-04-29 15:36:14.526756',\n    '1660,99,72,50,40,58,76,2020-04-30 15:36:14.524763',\n    '1659,70,30,74,20,49,34,2020-05-01 15:36:14.521769',\n    '1658,5,94,6,21,19,73,2020-05-02 15:36:14.519775'\n  ];\n\n  //fetch function by\n  size = this.test_data.length;\n\n  fetch_new_frame =  () => {\n\n    if (this.state.frame_counter < size){\n      this.setState({frame_counter: this.state.frame_counter+1});\n      return test_data[counter];\n    }\n    else{\n      return false;\n    }\n\n  }\n\n\n\n}\n\n  /*\n  renderControls = ()=>{\n    if (this.state.controls){\n      //console.log(\"renderControls called! And bool value in function:\")\n      //console.log(this.state.controls);\n      return(\n        <div className = \"controls\">\n          <div style = {{  position: 'absolute', top: '580px', left: '1000px'}} className = 'ThreeMoveButtons'>\n            <MoveButton text = \"Left\"  />\n            <MoveButton  text = \"Down\"/>\n            <MoveButton  text = \"Right\"  />\n          </div>\n\n          <div style= {{  position: 'absolute', top: '480px', left: '1100px'}} className = 'Top'>\n            <MoveButton  text = \"Top\"  />\n          </div>\n        </div>\n\n      );\n    }\n    //console.log(\"I'm called! And bool value in function:\")\n    //console.log(this.state.controls);\n    //return <div> no controls</div>;\n\n\n  }\n  renderCoord(){\n    return(\n      <div className=\"coordinates\">\n        <p style = {{position:'absolute',top:700, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LINK X: 452 </p>\n        <p style = {{position:'absolute',top:700, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LINK Y: 568 </p>\n        <p style = {{position:'absolute',top:730, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LASER X: 128 </p>\n        <p style = {{position:'absolute',top:730, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LASER Y: 345 </p>\n      </div>\n    );\n  }\n\n  renderDownload(){\n    if (this.state.controls){\n        return (\n        <div style= {{  position: 'absolute', top: '700px', left: '1360px'}} className = 'Download'>\n          <GradeintButton  text = \"DOWNLOAD LOG\"  />\n        </div>\n      );\n    }\n  }\n  */\n\n\n\n\n\n  ReactDOM.render(\n      <Dashboard />,\n    document.getElementById('root')\n  );\n\n  var fetch_success = fetch_new_frame();\n  while (fetch_success != false){\n    fetch_success = fetch_new_frame();\n  }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"]},"metadata":{},"sourceType":"module"}