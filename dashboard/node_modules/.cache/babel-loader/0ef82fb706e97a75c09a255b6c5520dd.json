{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MoveButton from './MoveButton.js';\nimport GradeintButton from './GradeintButton.js';\nimport OnOffButton from './OnOffButton.js';\nimport DistanceAngle from './DistanceAngle.js';\nimport Header from './Header.js';\nimport CoordTable from './Table.js';\nimport { Spinner } from './Spinner.js'; //4/20: merge column coordinates ()\n//add Distance Offset and Angle Offset as 2 new columns\n//Pixel dimensions: 960 x 720\n//download log: route to Downloads. Have bar at the bottom showing progress. Have a dummy csv/\n//download files generally: get general path\n//\n//NOTE: works at ZOOM 80 percent\n//remove link x link y\n//Switch controls and history\n//put actual image on\n//Add Loadng icon of same size\n//Show last 5 data points in a table when you press history\n//some ui on the table, dividling line\n//bold the header : time, linkx, link y etc\n//04/06/20 12:43:29.79\n//5 columns: first is time,\n//3 decimal points for link x y\n//go above the download button\n\n/*flow chart of eventhandlers:\n1.dashboard has a state of controls= true\n2. have a OnOffButton.js, and we use it in this main\n3. declare a onToggleSwitch function that setState when the onOffButton is pressed (and hence calls the render function)\n4. pass the onToggleSwitch as a prop to the onOffButton\n5. In onOffButton, create an event handler function for when the button is pressed. Inside that func, call the func that was\npassed from the parent with the param of the latest controls state\n6.the onToggleSwitch finally setStates and renders\n7.Also need to make sure the func render calls has conditionals in it\n\n*/\n\nconst csv_file = new Blob( //binary large object\n['Vehicle,0367,Dex,IC15\\n0.55155,19.258,3.4012,1.7465\\n0.73538,1.4708,1.2869,2.2062\\n2.436,0.36768,2.8496,1.5627'], {\n  type: 'text/csv'\n});\nconst buttonstyle = {\n  background: 'linear-gradient(45deg, #56CCF2 30%, #2F80ED 90%)',\n  //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  border: 0,\n  borderRadius: 5,\n  color: 'white',\n  padding: '0 30px',\n  height: 48,\n  width: 200,\n  display: 'inline-block',\n  textAlign: 'center',\n  justifyContent: 'center' //lineHeight: 48\n  //verticalAlign: 'central',\n  //top: '50%',\n  //position: 'relative',\n  //top: '50%',\n  //transform: 'translateY(-50%)'\n  //justifyContent: 'center',\n  //alignItems: 'center'\n\n  /*\n    display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  */\n\n};\n\nconst TestDownload = props => {\n  const url = URL.createObjectURL(csv_file);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"csv parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: buttonstyle,\n    className: \"downloadButton\",\n    href: url,\n    download: props.filename,\n    title: \"Export Records as CSV\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, props.text, \" \"));\n};\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: false,\n      video: false\n    };\n\n    this.onToggleSwitch = controls => {\n      //console.log(\"onToggleSwitch is called\");\n      //console.log(\"value of controls is\");\n      //console.log(controls);\n      this.setState({\n        controls: controls\n      });\n    };\n\n    this.renderOnOffButton = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '220px',\n          left: '1300px'\n        },\n        className: \"OnOffButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(OnOffButton, {\n        onClick: this.onToggleSwitch,\n        value: \"hello\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 10\n        }\n      }));\n    };\n\n    this.renderControls = () => {\n      if (!this.state.controls) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"controls\",\n          style: {\n            position: 'absolute',\n            top: '330px',\n            left: '1250px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DistanceAngle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '540px',\n            left: '1380px'\n          },\n          className: \"execute_move\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(GradeintButton, {\n          text: \"EXECUTE\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }\n        })));\n      } //console.log(\"I'm called! And bool value in function:\")\n      //console.log(this.state.controls);\n      //return <div> no controls</div>;\n\n    };\n\n    this.renderVideo = () => {\n      if (this.state.controls) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }\n        }, this.renderImage());\n        /*\n        return(\n          <video style = {{position:'absolute', top:150, left:50, maxWidth:960,height:720}} controls >\n            Your brower does not support this video format.\n          </video>\n        );\n        */\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 150,\n          left: 50,\n          width: 960,\n          height: 720\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, this.renderContent(), \";\");\n  }\n\n  renderContent() {\n    //{this.renderVideo()}\n    //{this.renderImage()}\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TestDownload, {\n      filename: \"mytest.csv\",\n      text: \"Download Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), this.renderTable_Download(), this.renderVideo(), this.renderOnOffButton(), this.renderControls());\n  }\n\n  renderTable_Download() {\n    if (this.state.controls) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"History\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '700px',\n          left: '1350px'\n        },\n        className: \"Download\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GradeintButton, {\n        text: \"DOWNLOAD LOG\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '320px',\n          left: '1060px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CoordTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n  renderImage() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 150,\n        left: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('./data/test_pic.jpg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/*\nrenderControls = ()=>{\n  if (this.state.controls){\n    //console.log(\"renderControls called! And bool value in function:\")\n    //console.log(this.state.controls);\n    return(\n      <div className = \"controls\">\n        <div style = {{  position: 'absolute', top: '580px', left: '1000px'}} className = 'ThreeMoveButtons'>\n          <MoveButton text = \"Left\"  />\n          <MoveButton  text = \"Down\"/>\n          <MoveButton  text = \"Right\"  />\n        </div>\n         <div style= {{  position: 'absolute', top: '480px', left: '1100px'}} className = 'Top'>\n          <MoveButton  text = \"Top\"  />\n        </div>\n      </div>\n     );\n  }\n  //console.log(\"I'm called! And bool value in function:\")\n  //console.log(this.state.controls);\n  //return <div> no controls</div>;\n  }\nrenderCoord(){\n  return(\n    <div className=\"coordinates\">\n      <p style = {{position:'absolute',top:700, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LINK X: 452 </p>\n      <p style = {{position:'absolute',top:700, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LINK Y: 568 </p>\n      <p style = {{position:'absolute',top:730, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LASER X: 128 </p>\n      <p style = {{position:'absolute',top:730, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LASER Y: 345 </p>\n    </div>\n  );\n}\n renderDownload(){\n  if (this.state.controls){\n      return (\n      <div style= {{  position: 'absolute', top: '700px', left: '1360px'}} className = 'Download'>\n        <GradeintButton  text = \"DOWNLOAD LOG\"  />\n      </div>\n    );\n  }\n}\n*/\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Dashboard, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/index.js"],"names":["React","ReactDOM","MoveButton","GradeintButton","OnOffButton","DistanceAngle","Header","CoordTable","Spinner","csv_file","Blob","type","buttonstyle","background","border","borderRadius","color","padding","height","width","display","textAlign","justifyContent","TestDownload","props","url","URL","createObjectURL","filename","text","Dashboard","Component","state","controls","video","onToggleSwitch","setState","renderOnOffButton","position","top","left","renderControls","renderVideo","renderImage","render","renderContent","renderTable_Download","require","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport MoveButton from './MoveButton.js';\nimport GradeintButton from './GradeintButton.js';\nimport OnOffButton from './OnOffButton.js';\nimport DistanceAngle from './DistanceAngle.js'\nimport Header from './Header.js'\nimport CoordTable from'./Table.js'\nimport {Spinner} from './Spinner.js'\n//4/20: merge column coordinates ()\n//add Distance Offset and Angle Offset as 2 new columns\n//Pixel dimensions: 960 x 720\n\n//download log: route to Downloads. Have bar at the bottom showing progress. Have a dummy csv/\n//download files generally: get general path\n\n\n\n//\n//NOTE: works at ZOOM 80 percent\n\n//remove link x link y\n//Switch controls and history\n//put actual image on\n//Add Loadng icon of same size\n\n//Show last 5 data points in a table when you press history\n//some ui on the table, dividling line\n//bold the header : time, linkx, link y etc\n//04/06/20 12:43:29.79\n//5 columns: first is time,\n//3 decimal points for link x y\n//go above the download button\n\n\n/*flow chart of eventhandlers:\n1.dashboard has a state of controls= true\n2. have a OnOffButton.js, and we use it in this main\n3. declare a onToggleSwitch function that setState when the onOffButton is pressed (and hence calls the render function)\n4. pass the onToggleSwitch as a prop to the onOffButton\n5. In onOffButton, create an event handler function for when the button is pressed. Inside that func, call the func that was\npassed from the parent with the param of the latest controls state\n6.the onToggleSwitch finally setStates and renders\n7.Also need to make sure the func render calls has conditionals in it\n\n*/\n\n\nconst csv_file = new Blob( //binary large object\n  [ 'Vehicle,0367,Dex,IC15\\n0.55155,19.258,3.4012,1.7465\\n0.73538,1.4708,1.2869,2.2062\\n2.436,0.36768,2.8496,1.5627' ],\n  { type: 'text/csv' }\n);\n\n\nconst buttonstyle = {\n  background: 'linear-gradient(45deg, #56CCF2 30%, #2F80ED 90%)',\n  //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  border: 0,\n  borderRadius: 5,\n  color: 'white',\n  padding: '0 30px',\n  height: 48,\n  width: 200,\n  display: 'inline-block',\n\n  textAlign: 'center',\n  justifyContent: 'center'\n  //lineHeight: 48\n  //verticalAlign: 'central',\n\n\n\n\n\n  //top: '50%',\n\n\n\n\n  //position: 'relative',\n  //top: '50%',\n  //transform: 'translateY(-50%)'\n  //justifyContent: 'center',\n  //alignItems: 'center'\n/*\n  display: flex;\nflex-direction: column;\njustify-content: center;\ntext-align: center;\n*/\n}\n\nconst TestDownload = (props) =>{\n  const url = URL.createObjectURL(csv_file);\n  return (\n    <div className=\"csv parent\">\n      <a style = {buttonstyle} className=\"downloadButton\" href={url} download= {props.filename} title = 'Export Records as CSV' >{props.text} </a>\n    </div>\n\n  );\n};\n\n\n\nclass Dashboard extends React.Component {\n  state = {controls:false, video:false};\n\n  render(){\n    return(\n      <div className = \"dashboard\">\n        {this.renderContent()};\n      </div>\n    );\n\n  }\n\n  renderContent(){\n    //{this.renderVideo()}\n    //{this.renderImage()}\n\n    return (\n      <div >\n        <TestDownload\n          filename = 'mytest.csv'\n          text = 'Download Me'\n        />\n        <Header/>\n        {this.renderTable_Download()}\n        {this.renderVideo()}\n        {this.renderOnOffButton()}\n        {this.renderControls()}\n      </div>\n    );\n\n  }\n\n  onToggleSwitch = (controls) =>{\n    //console.log(\"onToggleSwitch is called\");\n    //console.log(\"value of controls is\");\n    //console.log(controls);\n\n    this.setState({controls:controls});\n\n  }\n  renderOnOffButton = () =>{\n      return(\n        <div style = {{  position: 'absolute', top: '220px', left: '1300px'}} className = 'OnOffButton'>\n         <OnOffButton onClick = {this.onToggleSwitch}  value = \"hello\"/>\n        </div>\n\n      );\n\n  }\n  renderTable_Download(){\n\n    if (this.state.controls){\n        return (\n        <div className = 'History'>\n          <div style= {{  position: 'absolute', top: '700px', left: '1350px'}} className = 'Download'>\n            <GradeintButton  text = \"DOWNLOAD LOG\"  />\n          </div>\n\n          <div style ={{  position: 'absolute', top: '320px', left: '1060px'}}>\n            <CoordTable/>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n  renderControls = ()=>{\n    if (!this.state.controls){\n      return(\n        <div>\n          <div className = \"controls\" style = {{  position: 'absolute', top: '330px', left: '1250px'}}>\n            <DistanceAngle/>\n          </div>\n\n          <div style= {{  position: 'absolute', top: '540px', left: '1380px'}} className = 'execute_move'>\n            <GradeintButton  text = \"EXECUTE\"  />\n          </div>\n        </div>\n\n      );\n    }\n    //console.log(\"I'm called! And bool value in function:\")\n    //console.log(this.state.controls);\n    //return <div> no controls</div>;\n  }\n\n\n\n\n\n  renderVideo = () => {\n    if (this.state.controls){\n      return (\n        <div>\n          {this.renderImage()}\n        </div>\n      );\n      /*\n      return(\n        <video style = {{position:'absolute', top:150, left:50, maxWidth:960,height:720}} controls >\n          Your brower does not support this video format.\n        </video>\n      );\n      */\n    }\n    return (\n        <div style = {{position:'absolute', top:150, left:50, width: 960, height:720}}>\n          <Spinner/>\n        </div>\n\n    );\n  }\n  renderImage(){\n    return (\n      <div style = {{position:'absolute', top:150, left:50}}>\n        <img src={require('./data/test_pic.jpg')} />\n      </div>\n    );\n\n  }\n\n\n\n  }\n\n  /*\n  renderControls = ()=>{\n    if (this.state.controls){\n      //console.log(\"renderControls called! And bool value in function:\")\n      //console.log(this.state.controls);\n      return(\n        <div className = \"controls\">\n          <div style = {{  position: 'absolute', top: '580px', left: '1000px'}} className = 'ThreeMoveButtons'>\n            <MoveButton text = \"Left\"  />\n            <MoveButton  text = \"Down\"/>\n            <MoveButton  text = \"Right\"  />\n          </div>\n\n          <div style= {{  position: 'absolute', top: '480px', left: '1100px'}} className = 'Top'>\n            <MoveButton  text = \"Top\"  />\n          </div>\n        </div>\n\n      );\n    }\n    //console.log(\"I'm called! And bool value in function:\")\n    //console.log(this.state.controls);\n    //return <div> no controls</div>;\n\n\n  }\n  renderCoord(){\n    return(\n      <div className=\"coordinates\">\n        <p style = {{position:'absolute',top:700, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LINK X: 452 </p>\n        <p style = {{position:'absolute',top:700, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LINK Y: 568 </p>\n        <p style = {{position:'absolute',top:730, left:120, color:'#2F80ED', fontWeight: 'bold'}}> LASER X: 128 </p>\n        <p style = {{position:'absolute',top:730, left:240, color:'#2F80ED', fontWeight: 'bold'}}> LASER Y: 345 </p>\n      </div>\n    );\n  }\n\n  renderDownload(){\n    if (this.state.controls){\n        return (\n        <div style= {{  position: 'absolute', top: '700px', left: '1360px'}} className = 'Download'>\n          <GradeintButton  text = \"DOWNLOAD LOG\"  />\n        </div>\n      );\n    }\n  }\n  */\n\n\n\n\n\n\nReactDOM.render(\n    <Dashboard />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"]},"metadata":{},"sourceType":"module"}