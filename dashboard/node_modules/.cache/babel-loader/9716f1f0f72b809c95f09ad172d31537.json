{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/OnOffButton.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles'; //withStyles((theme)\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 50,\n    //28 //16\n    height: 24,\n    //16 //12\n    padding: 3,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    //2\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(26px)',\n      //how much it moves\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 20,\n    //12\n    height: 20,\n    //12\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    //16/2\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nconst InlineFormControlLabel = styled(FormControlLabel)({\n  display: 'inline-block'\n});\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    }); //props.renderControls(this.state.checkedC);\n  };\n  /*\n  const handleClick = (event) = >{\n    this.props.renderOnOffButton(this.state.checkedC);\n  };\n  */\n\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"label\",\n    container: true,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      color: '#2F80ED',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"HISTORY\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AntSwitch, {\n    checked: state.checkedC,\n    onChange: handleChange,\n    name: \"checkedC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      color: '#2F80ED',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"CONTROLS\"))));\n}\n/*\nclass CustomizedSwitches extends React.Component{\n  //state ={controls:true};\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  render(){\n    return (\n      <FormGroup>\n      {\n\n        <Typography component=\"div\">\n          <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n            <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>HISTORY</Grid>\n            <Grid item>\n              <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n            </Grid>\n            <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>CONTROLS</Grid>\n          </Grid>\n        </Typography>\n      </FormGroup>\n    );\n\n  }\n}\nexport default CustomizedSwitches;\n*/","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/OnOffButton.js"],"names":["React","withStyles","purple","FormGroup","FormControlLabel","Switch","Grid","Typography","styled","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","InlineFormControlLabel","CustomizedSwitches","state","setState","useState","checkedA","checkedB","checkedC","handleChange","event","target","name","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\n\n\n\n//withStyles((theme)\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 50, //28 //16\n    height: 24, //16 //12\n    padding: 3,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2, //2\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(26px)', //how much it moves\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 20, //12\n    height: 20, //12\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16/2, //16/2\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n})) (Switch);\n\n\nconst InlineFormControlLabel = styled(FormControlLabel)({\n  display: 'inline-block'\n});\n\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    //props.renderControls(this.state.checkedC);\n\n  };\n  /*\n  const handleClick = (event) = >{\n    this.props.renderOnOffButton(this.state.checkedC);\n  };\n  */\n\n  return (\n    <FormGroup>\n\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>HISTORY</Grid>\n          <Grid item>\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n          </Grid>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>CONTROLS</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n\n\n/*\nclass CustomizedSwitches extends React.Component{\n  //state ={controls:true};\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  render(){\n    return (\n      <FormGroup>\n      {\n\n        <Typography component=\"div\">\n          <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n            <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>HISTORY</Grid>\n            <Grid item>\n              <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n            </Grid>\n            <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>CONTROLS</Grid>\n          </Grid>\n        </Typography>\n      </FormGroup>\n    );\n\n  }\n}\nexport default CustomizedSwitches;\n*/\n"]},"metadata":{},"sourceType":"module"}