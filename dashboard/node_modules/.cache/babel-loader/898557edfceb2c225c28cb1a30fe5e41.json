{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MoveButton from './MoveButton.js';\nimport CustomButton from './StyleToggleButton.js';\nimport OnOffButton from './OnOffButton.js'; //control and history is just one button: one and off light switch\n//click on history: show downlaod log button, make controls disappear\n//click on controls (by default)\n//header: darker shade, same color. x1 robotics: Guardian\n//distance(cm): forward and top, angle(degrees): right and left\n//\n\n/*\nclass Dashboard extends React.Component {\n  state = {controls:'true'};\n\n  render(){\n    return (\n        renderContent();\n    );\n\n  }\n\n  renderControls(){\n    return(\n      <div className = \"Controls\">\n        <div style = {{  position: 'absolute', top: '580px', left: '1000px'}} className = 'ThreeMoveButtons'>\n          <MoveButton text = \"Left\"  />\n          <MoveButton  text = \"Down\"/>\n          <MoveButton  text = \"Right\"  />\n        </div>\n\n        <div style= {{  position: 'absolute', top: '480px', left: '1100px'}} className = 'Top'>\n          <MoveButton  text = \"Top\"  />\n        </div>\n      </div>\n\n    );\n\n  }\n  renderContent(){\n      return <div> Error: oops </div>;\n  }\n\n\n  }\n\n\n<div className = \"dash-board\" >\n  <div style = {{  position: 'absolute', top: '115px', left: '1035px'}} className = 'OnOffButton'>\n   <OnOffButton/>\n  </div>\n\n  <video style = {{position:'relative', top:110, left:120, maxWidth:600,height:570}} controls >\n    Your brower does not support this video format.\n  </video>\n\n\n  <p style = {{position:'absolute',top:700, left:120, color:'#0bace0'}}> LINK X: 452 </p>\n  <p style = {{position:'absolute',top:700, left:240, color:'#0bace0'}}> LINK Y: 568 </p>\n  <p style = {{position:'absolute',top:730, left:120, color:'#0bace0'}}> LASER X: 128 </p>\n  <p style = {{position:'absolute',top:730, left:240, color:'#0bace0'}}> LASER Y: 345 </p>\n\n\n\n\n  <div style= {{  position: 'absolute', top: '715px', left: '370px'}} className = 'Download'>\n    <CustomButton  text = \"DOWNLOAD LOG\"  />\n  </div>\n\n</div>\n*/\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  //React.Component source says we have to define render. will throw error if not defined\n  //returns jsx only, shouldn't do anything else\n  //NOTE BY the lifecyle method SETTTINGS: Every time we call setState on the App, this render func is called, and all its\n  //children components/functional or class based will be rerendered as well. Note: need to pass the updated state as prop\n  //to the children tho to make sure the rendered content is the latest\n  render() {\n    return (\n      /*#__PURE__*/\n      //can add other div such as borders if you want to\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, this.renderContent()) //can add other div such as borders if you want to\n\n    );\n  } //want to put conditonal logic here instead of in render\n\n\n  renderContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 14\n      }\n    }, \" Error: \");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/index.js"],"names":["React","ReactDOM","MoveButton","CustomButton","OnOffButton","App","Component","state","lat","errorMessage","render","renderContent","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAEA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAgBjCC,KAhBiC,GAgBzB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAhByB;AAAA;;AAoBhC;AACA;AAEA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAE;AACN;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,aAAL,EADH,CAFF,CAKE;;AALF;AASD,GArC+B,CAuChC;;;AACAA,EAAAA,aAAa,GAAE;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEH;;AA3C+B;;AAiDlCV,QAAQ,CAACS,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport MoveButton from './MoveButton.js';\nimport CustomButton from './StyleToggleButton.js';\nimport OnOffButton from './OnOffButton.js';\n\n\n//control and history is just one button: one and off light switch\n\n//click on history: show downlaod log button, make controls disappear\n//click on controls (by default)\n//header: darker shade, same color. x1 robotics: Guardian\n//distance(cm): forward and top, angle(degrees): right and left\n//\n\n/*\nclass Dashboard extends React.Component {\n  state = {controls:'true'};\n\n  render(){\n    return (\n        renderContent();\n    );\n\n  }\n\n  renderControls(){\n    return(\n      <div className = \"Controls\">\n        <div style = {{  position: 'absolute', top: '580px', left: '1000px'}} className = 'ThreeMoveButtons'>\n          <MoveButton text = \"Left\"  />\n          <MoveButton  text = \"Down\"/>\n          <MoveButton  text = \"Right\"  />\n        </div>\n\n        <div style= {{  position: 'absolute', top: '480px', left: '1100px'}} className = 'Top'>\n          <MoveButton  text = \"Top\"  />\n        </div>\n      </div>\n\n    );\n\n  }\n  renderContent(){\n      return <div> Error: oops </div>;\n  }\n\n\n  }\n\n\n<div className = \"dash-board\" >\n  <div style = {{  position: 'absolute', top: '115px', left: '1035px'}} className = 'OnOffButton'>\n   <OnOffButton/>\n  </div>\n\n  <video style = {{position:'relative', top:110, left:120, maxWidth:600,height:570}} controls >\n    Your brower does not support this video format.\n  </video>\n\n\n  <p style = {{position:'absolute',top:700, left:120, color:'#0bace0'}}> LINK X: 452 </p>\n  <p style = {{position:'absolute',top:700, left:240, color:'#0bace0'}}> LINK Y: 568 </p>\n  <p style = {{position:'absolute',top:730, left:120, color:'#0bace0'}}> LASER X: 128 </p>\n  <p style = {{position:'absolute',top:730, left:240, color:'#0bace0'}}> LASER Y: 345 </p>\n\n\n\n\n  <div style= {{  position: 'absolute', top: '715px', left: '370px'}} className = 'Download'>\n    <CustomButton  text = \"DOWNLOAD LOG\"  />\n  </div>\n\n</div>\n*/\n\nclass App extends React.Component {\n  //construct and render are keywords for funcs declared in React.component\n  /*\n  constructor(props){\n    //the automatic constructor calls super(props) by default, but\n    //if you define your own constructor, you need to call this yourself\n    super(props); //super is a keyword that calls App's super class's constructor (i.e. Component's constructor )\n\n    //required if you want to use the state system, state IS a keyword. can't use Mystate\n    //initialize the state object\n    this.state = {lat:null, errorMessage:''};\n\n  }\n  */\n\n  //this single line is equivalent to the constructor above because of the Babel library in the react project that\n state = {lat: null, errorMessage: ''};\n\n\n\n  //React.Component source says we have to define render. will throw error if not defined\n  //returns jsx only, shouldn't do anything else\n\n  //NOTE BY the lifecyle method SETTTINGS: Every time we call setState on the App, this render func is called, and all its\n  //children components/functional or class based will be rerendered as well. Note: need to pass the updated state as prop\n  //to the children tho to make sure the rendered content is the latest\n\n  render(){\n    return(\n      //can add other div such as borders if you want to\n      <div>\n        {this.renderContent()}\n      </div>\n      //can add other div such as borders if you want to\n    );\n\n\n  }\n\n  //want to put conditonal logic here instead of in render\n  renderContent(){\n      return <div> Error: </div>;\n\n  }\n\n\n}\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"]},"metadata":{},"sourceType":"module"}