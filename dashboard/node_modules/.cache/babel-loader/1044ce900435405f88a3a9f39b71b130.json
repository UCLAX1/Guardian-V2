{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/directionAngle.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //import MaskedInput from 'react-text-mask';\n//import NumberFormat from 'react-number-format';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n/*\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n*/\n\nexport default function DirectionAngle() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(cm)',\n    numberformat: '(degree)'\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"formatted-text-mask-input\",\n    style: {\n      fontSize: \"22px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \" Distance\"), /*#__PURE__*/React.createElement(Input, {\n    value: values.textmask,\n    onChange: handleChange,\n    name: \"textmask\",\n    id: \"formatted-text-mask-input\",\n    style: {\n      fontSize: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"formatted-text-mask-input\",\n    style: {\n      fontSize: \"22px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \" Angle\"), /*#__PURE__*/React.createElement(Input, {\n    value: values.numberformat,\n    onChange: handleChange,\n    name: \"numberformat\",\n    id: \"formatted-numberformat-input\",\n    style: {\n      fontSize: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/directionAngle.js"],"names":["React","PropTypes","makeStyles","Input","InputLabel","TextField","FormControl","useStyles","theme","root","margin","spacing","DirectionAngle","classes","values","setValues","useState","textmask","numberformat","handleChange","event","target","name","value","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AADiC,CAAZ,CAAD,CAA5B;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,KAAK,CAACgB,QAAN,CAAe;AACzCC,IAAAA,QAAQ,EAAE,MAD+B;AAEzCC,IAAAA,YAAY,EAAE;AAF2B,GAAf,CAA5B;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF1B,KAAD,CAAT;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,2BAApB;AAAiD,IAAA,KAAK,EAAI;AAACe,MAAAA,QAAQ,EAAC;AAAV,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEV,MAAM,CAACG,QADhB;AAEE,IAAA,QAAQ,EAAEE,YAFZ;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAC,2BAJL;AAKE,IAAA,KAAK,EAAI;AAACK,MAAAA,QAAQ,EAAC;AAAV,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAeE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,2BAApB;AAAiD,IAAA,KAAK,EAAI;AAACA,MAAAA,QAAQ,EAAC;AAAV,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEV,MAAM,CAACI,YADhB;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,IAAI,EAAC,cAHP;AAIE,IAAA,EAAE,EAAC,8BAJL;AAKE,IAAA,KAAK,EAAI;AAACK,MAAAA,QAAQ,EAAC;AAAV,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,CADF;AAgCD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n//import MaskedInput from 'react-text-mask';\n//import NumberFormat from 'react-number-format';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n/*\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n*/\nexport default function DirectionAngle() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(cm)',\n    numberformat: '(degree)',\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <FormControl>\n        <InputLabel htmlFor=\"formatted-text-mask-input\"  style = {{fontSize:\"22px\"}}> Distance</InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange}\n          name=\"textmask\"\n          id=\"formatted-text-mask-input\"\n          style = {{fontSize:\"10px\"}}\n\n        />\n\n\n      </FormControl>\n\n      <FormControl>\n        <InputLabel htmlFor=\"formatted-text-mask-input\"  style = {{fontSize:\"22px\"}}> Angle</InputLabel>\n        <Input\n          value={values.numberformat}\n          onChange={handleChange}\n          name=\"numberformat\"\n          id=\"formatted-numberformat-input\"\n          style = {{fontSize:\"10px\"}}\n\n        />\n\n\n      </FormControl>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}