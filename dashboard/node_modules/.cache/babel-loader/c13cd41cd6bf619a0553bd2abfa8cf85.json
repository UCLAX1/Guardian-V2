{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/OnOffButton.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500]\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff'\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({\n  classes,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Switch, Object.assign({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n});\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 45,\n    //28\n    height: 24,\n    //16\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 16,\n    //12\n    height: 16,\n    //12\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nconst InlineFormControlLabel = styled(FormControlLabel)({\n  display: 'inline-block'\n});\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"label\",\n    container: true,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      color: '#2F80ED',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"History\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AntSwitch, {\n    checked: state.checkedC,\n    onChange: handleChange,\n    name: \"checkedC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      color: '#2F80ED',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Controls\"))));\n}","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/OnOffButton.js"],"names":["React","withStyles","purple","FormGroup","FormControlLabel","Switch","Grid","Typography","styled","PurpleSwitch","switchBase","color","backgroundColor","checked","track","IOSSwitch","theme","root","width","height","padding","margin","spacing","transform","palette","common","white","opacity","border","thumb","borderRadius","grey","transition","transitions","create","focusVisible","classes","props","AntSwitch","display","primary","main","borderColor","boxShadow","InlineFormControlLabel","CustomizedSwitches","state","setState","useState","checkedA","checkedB","checkedC","handleChange","event","target","name","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAGA,MAAMC,YAAY,GAAGR,UAAU,CAAC;AAC9BS,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAET,MAAM,CAAC,GAAD,CADH;AAEV,iBAAa;AACXS,MAAAA,KAAK,EAAET,MAAM,CAAC,GAAD;AADF,KAFH;AAKV,0BAAsB;AACpBU,MAAAA,eAAe,EAAEV,MAAM,CAAC,GAAD;AADH;AALZ,GADkB;AAU9BW,EAAAA,OAAO,EAAE,EAVqB;AAW9BC,EAAAA,KAAK,EAAE;AAXuB,CAAD,CAAV,CAYlBT,MAZkB,CAArB;AAcA,MAAMU,SAAS,GAAGd,UAAU,CAAEe,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAJJ,GADiC;AAOvCZ,EAAAA,UAAU,EAAE;AACVU,IAAAA,OAAO,EAAE,CADC;AAEV,iBAAa;AACXG,MAAAA,SAAS,EAAE,kBADA;AAEXZ,MAAAA,KAAK,EAAEK,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,KAFjB;AAGX,oBAAc;AACZd,QAAAA,eAAe,EAAE,SADL;AAEZe,QAAAA,OAAO,EAAE,CAFG;AAGZC,QAAAA,MAAM,EAAE;AAHI;AAHH,KAFH;AAWV,6BAAyB;AACvBjB,MAAAA,KAAK,EAAE,SADgB;AAEvBiB,MAAAA,MAAM,EAAE;AAFe;AAXf,GAP2B;AAuBvCC,EAAAA,KAAK,EAAE;AACLX,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GAvBgC;AA2BvCL,EAAAA,KAAK,EAAE;AACLgB,IAAAA,YAAY,EAAE,KAAK,CADd;AAELF,IAAAA,MAAM,EAAG,aAAYZ,KAAK,CAACQ,OAAN,CAAcO,IAAd,CAAmB,GAAnB,CAAwB,EAFxC;AAGLnB,IAAAA,eAAe,EAAEI,KAAK,CAACQ,OAAN,CAAcO,IAAd,CAAmB,EAAnB,CAHZ;AAILJ,IAAAA,OAAO,EAAE,CAJJ;AAKLK,IAAAA,UAAU,EAAEhB,KAAK,CAACiB,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,kBAAD,EAAqB,QAArB,CAAzB;AALP,GA3BgC;AAkCvCrB,EAAAA,OAAO,EAAE,EAlC8B;AAmCvCsB,EAAAA,YAAY,EAAE;AAnCyB,CAAZ,CAAD,CAAV,CAoCd,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,KAA2B;AAC7B,sBACE,oBAAC,MAAD;AACE,IAAA,qBAAqB,EAAED,OAAO,CAACD,YADjC;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,OAAO,EAAE;AACPlB,MAAAA,IAAI,EAAEmB,OAAO,CAACnB,IADP;AAEPP,MAAAA,UAAU,EAAE0B,OAAO,CAAC1B,UAFb;AAGPmB,MAAAA,KAAK,EAAEO,OAAO,CAACP,KAHR;AAIPf,MAAAA,KAAK,EAAEsB,OAAO,CAACtB,KAJR;AAKPD,MAAAA,OAAO,EAAEuB,OAAO,CAACvB;AALV;AAHX,KAUMwB,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAnDiB,CAAlB;AAqDA,MAAMC,SAAS,GAAGrC,UAAU,CAAEe,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AACO;AACXC,IAAAA,MAAM,EAAE,EAFJ;AAEQ;AACZC,IAAAA,OAAO,EAAE,CAHL;AAIJmB,IAAAA,OAAO,EAAE;AAJL,GADiC;AAOvC7B,EAAAA,UAAU,EAAE;AACVU,IAAAA,OAAO,EAAE,CADC;AAEVT,IAAAA,KAAK,EAAEK,KAAK,CAACQ,OAAN,CAAcO,IAAd,CAAmB,GAAnB,CAFG;AAGV,iBAAa;AACXR,MAAAA,SAAS,EAAE,kBADA;AAEXZ,MAAAA,KAAK,EAAEK,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,KAFjB;AAGX,oBAAc;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZf,QAAAA,eAAe,EAAEI,KAAK,CAACQ,OAAN,CAAcgB,OAAd,CAAsBC,IAF3B;AAGZC,QAAAA,WAAW,EAAE1B,KAAK,CAACQ,OAAN,CAAcgB,OAAd,CAAsBC;AAHvB;AAHH;AAHH,GAP2B;AAoBvCZ,EAAAA,KAAK,EAAE;AACLX,IAAAA,KAAK,EAAE,EADF;AACM;AACXC,IAAAA,MAAM,EAAE,EAFH;AAEO;AACZwB,IAAAA,SAAS,EAAE;AAHN,GApBgC;AAyBvC7B,EAAAA,KAAK,EAAE;AACLc,IAAAA,MAAM,EAAG,aAAYZ,KAAK,CAACQ,OAAN,CAAcO,IAAd,CAAmB,GAAnB,CAAwB,EADxC;AAELD,IAAAA,YAAY,EAAE,KAAK,CAFd;AAGLH,IAAAA,OAAO,EAAE,CAHJ;AAILf,IAAAA,eAAe,EAAEI,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC;AAJjC,GAzBgC;AA+BvCb,EAAAA,OAAO,EAAE;AA/B8B,CAAZ,CAAD,CAAV,CAgCdR,MAhCc,CAAlB;AAmCA,MAAMuC,sBAAsB,GAAGpC,MAAM,CAACJ,gBAAD,CAAN,CAAyB;AACtDmC,EAAAA,OAAO,EAAE;AAD6C,CAAzB,CAA/B;AAIA,eAAe,SAASM,kBAAT,GAA8B;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB/C,KAAK,CAACgD,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,QAAQ,EAAE,IAF6B;AAGvCC,IAAAA,QAAQ,EAAE;AAH6B,GAAf,CAA1B;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BN,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACO,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAazC;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,IAAA,SAAS,MAAjC;AAAkC,IAAA,UAAU,EAAC,QAA7C;AAAsD,IAAA,OAAO,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,KAAK,EAAG;AAACF,MAAAA,KAAK,EAAC,SAAP;AAAkB6C,MAAAA,UAAU,EAAE;AAA9B,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEV,KAAK,CAACK,QAA1B;AAAoC,IAAA,QAAQ,EAAEC,YAA9C;AAA4D,IAAA,IAAI,EAAC,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,KAAK,EAAG;AAACzC,MAAAA,KAAK,EAAC,SAAP;AAAkB6C,MAAAA,UAAU,EAAE;AAA9B,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,CAbF,CADF;AAyBD","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\n\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 45, //28\n    height: 24, //16\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 16, //12\n    height: 16, //12\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\n\nconst InlineFormControlLabel = styled(FormControlLabel)({\n  display: 'inline-block'\n});\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n    {/*\n     <Grid item>History</Grid>\n      <InlineFormControlLabel\n        control={<PurpleSwitch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={<IOSSwitch checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\n        label=\"iOS style\"\n      />\n      */}\n\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>History</Grid>\n          <Grid item>\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n          </Grid>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>Controls</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}