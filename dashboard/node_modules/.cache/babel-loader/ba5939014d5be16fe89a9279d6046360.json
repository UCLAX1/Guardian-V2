{"ast":null,"code":"var _jsxFileName = \"/Users/audi/Desktop/react projects/new_dashboard/src/OnOffButton.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles'; //withStyles((theme)\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 70,\n    //28 //16 //50\n    height: 30,\n    //16 //12 //24\n    padding: 3,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 4,\n    //2\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(44px)',\n      //how much it moves\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: '#2F80ED',\n        //theme.palette.primary.main,\n        borderColor: '#2F80ED' //theme.palette.primary.main,\n\n      }\n    }\n  },\n  thumb: {\n    width: 26,\n    //12\n    height: 26,\n    //12\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    //16/2\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nconst InlineFormControlLabel = styled(FormControlLabel)({\n  display: 'inline-block'\n});\n\nclass OnOffButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: false\n    };\n\n    this.handleChange = event => {\n      //console.log(this.state.controls);\n      //console.log(this.props.textstring);\n      //console.log(\"controls value in handleChange before\");\n      //console.log(this.state.controls);\n      //console.log(this);\n      this.setState({\n        controls: event.target.checked\n      }); //needs to set state for this OnOffButton for it to rerender\n      //console.log(\"controls value in handleChange after\");\n      //console.log(this.state.controls);\n      //added a ! because it seems that this.state.controls does not change immediately after the setState call.\n\n      this.props.onClick(!this.state.controls); //send the controls state back to the parent, who can then make controls disappear or not,\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        color: '#2F80ED',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"CONTROLS\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AntSwitch, {\n      checked: this.state.controls,\n      onChange: this.handleChange,\n      name: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        color: '#2F80ED',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"HISTORY\"))));\n  }\n\n}\n\nexport default OnOffButton;\n/*\nexport default function OnoffButton(props) {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    props.renderControls(this.state.checkedC);\n\n  };\n\n\n  console.log(props.textstring); //the props passing worked here\n\n  return (\n    <FormGroup>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>HISTORY</Grid>\n          <Grid item>\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n          </Grid>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>CONTROLS</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n*/\n\n/*\n\nclass SearchBar extends React.Component{\n  state ={term:''};\n\n  onFormSubmit = (event)=>{\n\n    event.preventDefault();\n\n    props.onSearchEntered(this.state.term);\n  }\n\n  render(){\n    return(\n      <div className = \"ui segment\">\n        <form onSubmit={this.onFormSubmit}className = \"ui form\">\n          <div  className = \"field\">\n            <label> Image Search </label>\n            <input type =\"text\"\n            value = {this.state.term}\n            onChange ={(e)=>this.setState({term:e.target.value})} //update the state term as the most up to date user input\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n//export default SearchBar;\n*/","map":{"version":3,"sources":["/Users/audi/Desktop/react projects/new_dashboard/src/OnOffButton.js"],"names":["React","withStyles","FormGroup","FormControlLabel","Switch","Grid","Typography","styled","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","borderColor","thumb","boxShadow","track","border","borderRadius","checked","InlineFormControlLabel","OnOffButton","Component","state","controls","handleChange","event","setState","target","props","onClick","render","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\n\n\n\n//withStyles((theme)\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 70, //28 //16 //50\n    height: 30, //16 //12 //24\n    padding: 3,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 4, //2\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(44px)', //how much it moves\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: '#2F80ED', //theme.palette.primary.main,\n        borderColor: '#2F80ED'//theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 26, //12\n    height: 26, //12\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16/2, //16/2\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n})) (Switch);\n\n\nconst InlineFormControlLabel = styled(FormControlLabel)({\n  display: 'inline-block'\n});\n\n\n\nclass OnOffButton extends React.Component{\n  state ={controls:false};\n\n  handleChange = (event) => {\n    //console.log(this.state.controls);\n    //console.log(this.props.textstring);\n\n    //console.log(\"controls value in handleChange before\");\n    //console.log(this.state.controls);\n\n    //console.log(this);\n    this.setState({controls: event.target.checked}); //needs to set state for this OnOffButton for it to rerender\n\n    //console.log(\"controls value in handleChange after\");\n    //console.log(this.state.controls);\n\n    //added a ! because it seems that this.state.controls does not change immediately after the setState call.\n    this.props.onClick(!this.state.controls); //send the controls state back to the parent, who can then make controls disappear or not,\n\n\n  };\n\n  render(){\n    return (\n      <FormGroup>\n        <Typography component=\"div\">\n          <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n            <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>CONTROLS</Grid>\n            <Grid item>\n              <AntSwitch checked={this.state.controls} onChange={this.handleChange} name=\"checkedC\" />\n            </Grid>\n            <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>HISTORY</Grid>\n          </Grid>\n        </Typography>\n      </FormGroup>\n    );\n  }\n}\nexport default OnOffButton;\n\n/*\nexport default function OnoffButton(props) {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    props.renderControls(this.state.checkedC);\n\n  };\n\n\n  console.log(props.textstring); //the props passing worked here\n\n  return (\n    <FormGroup>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={2}>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>HISTORY</Grid>\n          <Grid item>\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n          </Grid>\n          <Grid item style ={{color:'#2F80ED', fontWeight: 'bold' }}>CONTROLS</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n*/\n\n/*\n\nclass SearchBar extends React.Component{\n  state ={term:''};\n\n  onFormSubmit = (event)=>{\n\n    event.preventDefault();\n\n    props.onSearchEntered(this.state.term);\n  }\n\n  render(){\n    return(\n      <div className = \"ui segment\">\n        <form onSubmit={this.onFormSubmit}className = \"ui form\">\n          <div  className = \"field\">\n            <label> Image Search </label>\n            <input type =\"text\"\n            value = {this.state.term}\n            onChange ={(e)=>this.setState({term:e.target.value})} //update the state term as the most up to date user input\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n//export default SearchBar;\n*/\n"]},"metadata":{},"sourceType":"module"}